on:
  workflow_call:
    inputs:
      local_repo:
        required: false
        type: string
      local_ref:
        required: false
        type: string
      branch:
        required: true
        type: string
    secrets:
      TUXSUITE_TOKEN:
        required: true

env:
  MANIFEST_URL: https://github.com/96boards/oe-rpb-manifest.git
  HOST: ubuntu-20.04
  MACHINES: qcom-armv8a qcom-armv7a
  DISTRO: rpb rpb-wayland
  IMAGES: rpb-console-image rpb-console-image-test
  IMAGES_rpb: rpb-desktop-image rpb-desktop-image-test
  IMAGES_rpb_wayland: rpb-weston-image rpb-weston-image-test

jobs:
  build:
    name: ${{github.event_name}} - ${{github.ref}}
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade tuxsuite
    - name: Setup tux plan
      run: |
        cat << EOF > plan.yaml
        name: CI for ${{github.repository}}
        description: ${{github.workflow}} - ${{github.ref}}
        version: 1

        common: &commondata
          container: $HOST
          envsetup: setup-environment
          sources:
            repo:
              branch: ${{inputs.branch}}
              manifest: default.xml
              url: $MANIFEST_URL
          local_conf:
            - INHERIT += 'buildstats buildstats-summary'
            - INHERIT:remove = 'rm_work'
            - CONNECTIVITY_CHECK_URIS = "https://www.google.com/"
          artifacts: []

        rpb: &rpb
          distro: rpb
          target: ${IMAGES} ${IMAGES_rpb}

        rpb-wayland: &rpb-wayland
          distro: rpb-wayland
          target: ${IMAGES} ${IMAGES_rpb_wayland}

        jobs:
        EOF

        for distro in ${DISTRO}; do
        cat << EOF >> plan.yaml
        - name: ${distro}
          bakes:
        EOF
        for machine in $MACHINES; do
        cat << EOF >> plan.yaml
            - { <<: [*commondata, *${distro}], machine: ${machine}, name: ${machine}-${distro} }
        EOF
        done
        done
        echo "Ready to submit this Tux Plan:"
        cat plan.yaml
    - name: Setup local_manifest
      if: inputs.local_repo && inputs.local_ref
      run: |
        cat << EOF > local_manifest.xml
        <?xml version="1.0" encoding="UTF-8"?>
        <manifest>
        <extend-project name="${{ inputs.local_repo }}" revision="${{ inputs.local_ref }}" />
        </manifest>
        EOF
    - name: Run build
      run: |
        if [ -f local_manifest.xml ]; then
            tuxsuite plan plan.yaml -l local_manifest.xml
        else
            tuxsuite plan plan.yaml
        fi
      env:
        TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
